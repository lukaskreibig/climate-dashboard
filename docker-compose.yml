services:
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-climate}
      POSTGRES_USER: ${POSTGRES_USER:-climate}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-climate}
    env_file:
      - ./docker/.env.dev
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U ${POSTGRES_USER:-climate} -d ${POSTGRES_DB:-climate}
      interval: 3s
      timeout: 3s
      retries: 30
      start_period: 5s

  api:
    build:
      context: ./backend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./docker/.env.dev
    environment:
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER:-climate}:${POSTGRES_PASSWORD:-climate}@db:5432/${POSTGRES_DB:-climate}
      PORT: 8000
    ports:
      - "8000:8000"
    command: uvicorn main:app --host 0.0.0.0 --port ${PORT}

  pipeline:
    build:
      context: ./data-pipeline
    restart: "no"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./docker/.env.dev
    environment:
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER:-climate}:${POSTGRES_PASSWORD:-climate}@db:5432/${POSTGRES_DB:-climate}
      FJORD_CSV_PATH: /app/input/summary_test_cleaned.csv
    working_dir: /app
    volumes:
      - ./data-pipeline/data/summary_test_cleaned.csv:/app/input/summary_test_cleaned.csv:ro
    command: bash -lc "python3 wait_for_db.py && python3 -u update_pipeline.py && python3 -u update_fjord_data.py"
    profiles:
      - pipeline

volumes:
  pgdata:
