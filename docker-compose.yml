services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: climate
      POSTGRES_USER: climate
      POSTGRES_PASSWORD: climate
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U climate -d climate"]
      interval: 3s
      timeout: 3s
      retries: 30
      start_period: 5s

  api:
    build: ./backend
    environment:
      DATABASE_URL: postgresql+psycopg2://climate:climate@db:5432/climate
      OPENAI_API_KEY: "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"
    depends_on:
      - db
    ports:
      - "8000:8000"
    command: uvicorn main:app --host 0.0.0.0 --port 8000

  data-pipeline:
    build: ./data-pipeline
    environment:
      DATABASE_URL: postgresql+psycopg2://climate:climate@db:5432/climate
      FJORD_CSV_PATH: /app/input/summary_test_cleaned.csv
    depends_on:
      db:
        condition: service_healthy
    working_dir: /app
    volumes:
      - ./data-pipeline/data/summary_test_cleaned.csv:/app/input/summary_test_cleaned.csv:ro
    command: bash -lc "python3 wait_for_db.py && python3 -u update_pipeline.py && python3 -u update_fjord_data.py"
volumes:
  pgdata:
